{"version":3,"sources":["components/Header/index.js","components/Navbar/index.js","utils/queries.js","utils/mutations.js","utils/auth.js","components/Cardrender/index.js","pages/Cards.js","pages/Profile.js","components/Login/index.js","components/Signup/index.js","pages/Login.js","pages/Settings.js","components/LikedCards/index.js","pages/Likes.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonAppBar","Box","sx","AppBar","position","backgroundColor","Toolbar","className","src","alt","href","style","textDecoration","color","Navbar","React","useState","value","setValue","ref","useRef","width","window","innerWidth","dimensions","setDimensions","useEffect","addEventListener","pb","CssBaseline","Paper","elevation","BottomNavigation","showlabels","alignItems","onChange","event","newValue","BottomNavigationAction","label","icon","role","QUERY_ME","gql","QUERY_SINGLE_USER","QUERY_ALL_DOGS","QUERY_SETTINGS","LOGIN","ADD_USER","UPDATE_SETTINGS","UPDATE_USER_PETS","REMOVE_USER","REMOVE_USER_PETS","tokenId","localStorage","setItem","location","assign","removeItem","getItem","token","decode","exp","Date","now","err","this","getToken","checkTokenExpiration","Cardrender","props","dogCardData","lastDirection","setLastDirection","settings","useQuery","loading","data","useMutation","updateUserPets","dogs","console","log","length","age","size","house_trained","filter","dog","error","dogsToFilter","likedDogs","map","_id","finalDogData","includes","swiped","direction","a","outOfFrame","id","variables","Auth","getProfileToken","key","onSwipe","onCardLeftScreen","photo","medium","name","Cards","userId","pets","isLoggedIn","display","flexDirection","justifyContent","textAlign","Button","onClick","Profile","me","profileDogs","date","user","createdAt","joinedDate","month","toLocaleString","year","slice","username","Avatar","height","Fragment","container","class","small","breed","primary","gender","to","underline","variant","LoginComp","flipChange","email","password","loginState","setLoginState","login","handleChange","target","handleFormSubmit","preventDefault","FormGroup","FormLabel","align","fontFamily","fontStyle","InputLabel","htmlFor","Input","aria-describedby","type","required","FormHelperText","marginTop","maxWidth","message","Signup","formState","setFormState","addUser","clickHandler","changeHandler","Login","flipState","setFlipState","gridAutoColumns","gap","Grid","item","Settings","prevAge","prevSize","prevTrained","updateSettings","removeUser","setAge","setSize","trained","setTrained","ageFlag","setAgeFlag","sizeFlag","setSizeFlag","trainedFlag","setTrainedFlag","isMounted","current","handleSettingsChange","handleDelete","e","logout","paddingBottom","FormControl","fullWidth","marginBottom","Select","labelId","MenuItem","component","aria-label","row","FormControlLabel","control","Switch","checked","labelPlacement","LikedCards","yesNo","removePet","dogId","removeUserPets","reload","borderRadius","xs","organization","spayed","shots","description","url","rel","Likes","spacing","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","theme","createTheme","palette","main","typography","h1","h2","App","ThemeProvider","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e005e83a.chunk.js","sourcesContent":["import * as React from 'react';\r\n// imports from material\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport './Header.css';\r\n\r\n\r\n\r\nexport default function ButtonAppBar() {\r\n  return (\r\n    <Box sx={{ }}>\r\n      <AppBar sx = {{ position:\"static\", backgroundColor:\"transparent\"}} >\r\n        <Toolbar className='sheltrHeader'>\r\n        <img src=\"./images/sheltr_logo2.png\" alt=\"Sheltr\" className='headerImg'/>\r\n         <a href='/sheltr' className='headerText' style={{ textDecoration:'none', color:'#000' }}>Sheltr</a>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}","import React from \"react\";\r\n// imports from material\r\nimport Box from \"@mui/material/Box\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\r\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport './navbar.css'\r\n\r\nexport default function Navbar() {\r\n  const [value, setValue] = React.useState(0);\r\n  const ref = React.useRef(null);\r\n\r\n  const [dimensions, setDimensions] = React.useState({ \r\n    width: window.innerWidth\r\n  })\r\n  React.useEffect(() => {\r\n    function handleResize() {\r\n      setDimensions({\r\n        width: window.innerWidth\r\n      })\r\n  }\r\n    window.addEventListener('resize', handleResize)\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Box sx={{ pb: 7 }} ref={ref}>\r\n      {dimensions.width < 1200 ? \r\n      (\r\n      <div>\r\n      <CssBaseline />\r\n\r\n      <Paper\r\n        className='bottomNavbarContainer'\r\n        elevation={3}\r\n      >\r\n        <BottomNavigation\r\n          showlabels=\"true\"\r\n          value={value}\r\n          sx={{alignItems:'center'}}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n        >\r\n          <a href=\"/profile\">\r\n            <BottomNavigationAction\r\n              label=\"Profile\"\r\n              icon={<img src=\"./images/profileblank2.png\" alt=\"profile\" />}\r\n            />\r\n          </a>\r\n          <a href=\"/sheltr\">\r\n            <BottomNavigationAction\r\n              label=\"Sheltr\"\r\n              icon={<img src=\"./images/pawblank2.png\" alt=\"sheltr\"/>}\r\n            />\r\n          </a>\r\n          <a href=\"/likes\">\r\n            <BottomNavigationAction\r\n              label=\"Likes\"\r\n              icon={<img src=\"./images/heartblank2.png\" alt=\"liked cards\"/>}\r\n            />\r\n          </a>\r\n          <a href=\"/settings\">\r\n            <BottomNavigationAction\r\n              label=\"Settings\"\r\n              icon={<img src=\"./images/settingsblank2.png\" alt=\"settings\"/>}\r\n            />\r\n          </a>\r\n        </BottomNavigation>\r\n      </Paper>\r\n      </div>)\r\n\r\n    :\r\n\r\n    (<div className='topNavContainer'>\r\n    <nav role=\"navigation\">\r\n        <ul className='topNavUl'>\r\n            <li className='topNavLi'>\r\n                <a href='/profile' className='topNavLink'>\r\n                    <img src='./images/profileblank.png' alt='profile'></img>\r\n                    Profile\r\n                </a>\r\n            </li>\r\n            <li className='topNavLi'>\r\n                <a href='/sheltr' className='topNavLink'>\r\n                    <img src='./images/pawblank.png' alt='sheltr'></img>\r\n                    Sheltr\r\n                </a>\r\n            </li>\r\n            <li className='topNavLi'>\r\n                <a href='/likes' className='topNavLink'>\r\n                    <img src='./images/heartblank.png' alt='heart'></img>\r\n                    Likes\r\n                </a>\r\n            </li>\r\n            <li className='topNavLi'>\r\n                <a href='/settings' className='topNavLink'>\r\n                    <img src='./images/settingsblank.png' alt='settings'></img>\r\n                    Settings\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n    </div>\r\n    )\r\n    }\r\n    </Box>\r\n  );\r\n}\r\n\r\n","\r\nimport {gql} from \"@apollo/client\";\r\n\r\nexport const QUERY_ME = gql`\r\nquery me {\r\n    me{\r\n        username\r\n        email\r\n        password\r\n        pets {\r\n            _id\r\n            name\r\n            breed {\r\n            primary\r\n            secondary\r\n            mixed\r\n            unknown\r\n            }\r\n            age\r\n            size\r\n            gender\r\n            photo {\r\n            small\r\n            medium\r\n            large\r\n            full\r\n            }\r\n            url\r\n            location\r\n            description\r\n            spayed\r\n            house_trained\r\n            shots\r\n            organization\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\nexport const QUERY_SINGLE_USER = gql`\r\n    query getOneUser($id: ID!) {\r\n        user(_id: $id){\r\n            username\r\n            email\r\n            password\r\n            createdAt\r\n            location\r\n            pets {\r\n                _id\r\n                name\r\n                breed {\r\n                primary\r\n                secondary\r\n                mixed\r\n                unknown\r\n                }\r\n                age\r\n                size\r\n                gender\r\n                photo {\r\n                small\r\n                medium\r\n                large\r\n                full\r\n                }\r\n                url\r\n                location\r\n                description\r\n                spayed\r\n                house_trained\r\n                shots\r\n                organization\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const QUERY_ALL_DOGS = gql`\r\n    query getAllDogs {\r\n        dogs{\r\n        _id\r\n        name\r\n        breed {\r\n        primary\r\n        secondary\r\n        mixed\r\n        unknown\r\n        }\r\n        age\r\n        gender\r\n        size\r\n        gender\r\n        photo {\r\n        small\r\n        medium\r\n        large\r\n        full\r\n        }\r\n        url\r\n        location\r\n        description\r\n        spayed\r\n        house_trained\r\n        shots\r\n        organization\r\n    }\r\n}\r\n`;\r\n\r\nexport const QUERY_SETTINGS = gql`\r\n    query getSettings($userId: ID!) {\r\n        settings(userId: $userId) {\r\n        _id\r\n        userId{\r\n            username\r\n            pets {\r\n                _id\r\n                name\r\n                breed {\r\n                primary\r\n                secondary\r\n                mixed\r\n                unknown\r\n                }\r\n                age\r\n                gender\r\n                size\r\n                gender\r\n                photo {\r\n                small\r\n                medium\r\n                large\r\n                full\r\n                }\r\n                url\r\n                location\r\n                description\r\n                spayed\r\n                house_trained\r\n                shots\r\n                organization\r\n            }\r\n        }\r\n        age\r\n        size\r\n        house_trained\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ALL_USERS = gql`\r\n    query allUsers {\r\n        _id\r\n        username\r\n        email\r\n    }\r\n`;","import {\r\n  gql\r\n} from '@apollo/client'\r\n\r\nexport const LOGIN = gql `\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql `\r\n  mutation addUser(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $location: String!\r\n  ) {\r\n    addUser(\r\n      username: $username\r\n      email: $email\r\n      password: $password\r\n      location: $location\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const ADD_SETTINGS = gql `\r\nmutation addSettings($userId: ID!, $age: String, $size: String, $house_trained: Boolean) {\r\n  addSettings(userId: $userId, age: $age, size:$size, house_trained:$house_trained) {\r\n    _id\r\n    userId {\r\n      username\r\n    }\r\n    age\r\n    size\r\n    house_trained\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_SETTINGS = gql `\r\nmutation updateSettings($userId: ID!, $age:String, $size:String,$house_trained:Boolean) {\r\n  updateSettings(userId: $userId, age: $age, size: $size, house_trained: $house_trained) {\r\n    _id\r\n    userId {\r\n      username\r\n    }\r\n    age\r\n    size\r\n    house_trained\r\n  }\r\n}\r\n`;\r\n\r\nexport const UPDATE_USER_PETS = gql `\r\n  mutation updateUserPets(\r\n    $_id: ID!\r\n    $dog: ID!\r\n  ) {\r\n      updateUserPets (\r\n          _id: $_id\r\n          dog: $dog\r\n      ) {\r\n        username\r\n        email\r\n        pets{\r\n          _id\r\n          name\r\n        }\r\n      }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_USER = gql`\r\n  mutation removeUser(\r\n    $_id: ID!\r\n  ) {\r\n    removeUser (\r\n      _id: $_id\r\n    ){\r\n      _id\r\n      username\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_USER_PETS = gql`\r\n  mutation removeUserPets($userId: ID!, $dog: ID!) {\r\n    removeUserPets(userId: $userId, dog: $dog) {\r\n      username\r\n      email\r\n      password\r\n      pets {\r\n          name\r\n          breed {\r\n            primary\r\n            secondary\r\n            mixed\r\n            unknown\r\n          }\r\n          age\r\n          size\r\n          gender\r\n          photo {\r\n            small\r\n            medium\r\n            large\r\n            full\r\n          }\r\n          url\r\n          location\r\n          description\r\n          spayed\r\n          house_trained\r\n          shots\r\n          organization\r\n      }\r\n    }\r\n  }\r\n`","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    //Saves user token\r\n    login(tokenId) {\r\n        localStorage.setItem('id_token', tokenId);\r\n        \r\n        window.location.assign('/profile');\r\n    }\r\n    //deletes user token\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n    //get user token from localstorage\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    checkTokenExpiration(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n\r\n            if(decoded.exp < Date.now() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch(err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getProfileToken() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    isLoggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.checkTokenExpiration(token);\r\n    }\r\n};\r\n\r\nexport default new AuthService();","import React, { useState } from \"react\";\r\nimport TinderCard from 'react-tinder-card';\r\nimport { \r\n    QUERY_ALL_DOGS, \r\n} from \"../../utils/queries\";\r\nimport {UPDATE_USER_PETS} from \"../../utils/mutations\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport Auth from \"../../utils/auth\";\r\n\r\nexport default function Cardrender(props) {\r\n    const [lastDirection, setLastDirection] = useState();\r\n    \r\n    const settings = props.settings;\r\n    const {loading, data} = useQuery(QUERY_ALL_DOGS);\r\n    const [updateUserPets] = useMutation(UPDATE_USER_PETS);\r\n    const dogs = data?.dogs;\r\n    let dogCardData;\r\n    if(loading) {\r\n        return <div>Loading cards...</div>\r\n    }\r\n    console.log(props.settings);\r\n    if(data?.dogs.length !== 0) {\r\n        switch(true) {\r\n            case ((settings.age !== null) && (settings.size !== null) && (settings.house_trained !== null)): {\r\n                console.log(\"age, size, houseTrained firing\")\r\n                dogCardData = dogs.filter((dog) => (dog.age === settings.age) && (dog.size === settings.size) && (dog.house_trained === settings.house_trained));\r\n                break;\r\n            }\r\n            case ((settings.age !== null) && (settings.size !== null)): {\r\n                console.log(\"age, size firing\");\r\n                dogCardData = dogs.filter((dog) => (dog.age === settings.age) && (dog.size === settings.size));\r\n                break;\r\n            }\r\n            case ((settings.age !== null) && (settings.house_trained !== null)): {\r\n                console.log(\"age, houseTrained firing\");\r\n                dogCardData = dogs.filter((dog) => (dog.age === settings.age) && (dog.house_trained === settings.house_trained));\r\n                break;\r\n            }\r\n            case ((settings.age !== null)): {\r\n                console.log(\"settings.age case firing\");\r\n                dogCardData = dogs.filter((dog) => dog.age === settings.age);\r\n                break;\r\n            }\r\n            case((settings.size !== null) && (settings.house_trained !== null)): {\r\n                console.log(\"size, houseTrained firing\");\r\n                dogCardData = dogs.filter((dog) => (dog.size === settings.size) && (dog.house_trained === settings.house_trained));\r\n                break;\r\n            }\r\n            case((settings.size !== null)): {\r\n                console.log(\"size firing\");\r\n                dogCardData = dogs.filter((dog) => dog.size === settings.size);\r\n                break;\r\n            }\r\n            case((settings.house_trained !== null)): {\r\n                console.log(\"houseTrained firing\");\r\n                dogCardData = dogs.filter((dog) => dog.house_trained === settings.house_trained);\r\n                break;\r\n            }\r\n            case((settings.house_trained === null && settings.size === null && settings.age === null)): {\r\n                console.log(\"default case firing\");\r\n                dogCardData = dogs;\r\n                break;\r\n            }\r\n            default: {\r\n                console.error(\"Something went wrong\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    const dogsToFilter = props.likedDogs.map((dog) => dog._id);\r\n    const finalDogData = dogCardData.filter((dog) => {\r\n        return !dogsToFilter.includes(dog._id);\r\n    });\r\n    const swiped = async (direction) => {\r\n        setLastDirection(direction);\r\n      }\r\n    const outOfFrame = async (direction, id) => {\r\n        console.log(\"Dog id\", id, \"\\nDirection\", direction);\r\n        if(direction === 'right') {\r\n            try {\r\n                    await updateUserPets({\r\n                    variables: {_id: Auth.getProfileToken().data._id, dog: id}\r\n                })\r\n            }catch(err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n    if(dogCardData.length === 0) {\r\n        return (\r\n            <div>No Dogs Found! Change your filter settings to get more dogs!</div>\r\n        )\r\n    }\r\n\r\n    return(<div className='tinderContainer'>\r\n        {finalDogData.map((dog) => {\r\n\r\n            return(\r\n            <TinderCard className='swipe' key={dog._id} onSwipe={(direction) => swiped(direction)} onCardLeftScreen={(direction) => outOfFrame(direction, dog._id)}>\r\n                <img src={dog.photo[0].medium} alt={dog.name} className = \"swipeImg\"/>\r\n                <h2 className=\"swipeDogName\">{dog.name}</h2>\r\n                <p className=\"swipeDogLocation\">{dog.location}</p>\r\n            </TinderCard>)\r\n        })}\r\n        {lastDirection ? <h2>You swiped {lastDirection}</h2> : <div></div>}\r\n    </div>)\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n// import from components\r\nimport Cardrender from \"../components/Cardrender\";\r\n// import from utils\r\nimport { QUERY_SETTINGS } from \"../utils/queries\";\r\nimport Auth from \"../utils/auth\";\r\n// import from material\r\nimport Button from \"@mui/material/Button\";\r\nimport \"./Cards.css\";\r\n\r\nexport default function Cards() {\r\n  const {loading, data} = useQuery(QUERY_SETTINGS, {\r\n      variables: {userId: Auth.getProfileToken().data._id}\r\n  });\r\n  let settings;\r\n  let likedDogs;\r\n  if(loading) {\r\n      return <div>Loading settings...</div>\r\n  } else {\r\n      settings = data?.settings;\r\n      likedDogs = data?.settings.userId.pets;\r\n  }\r\n\r\n  const goLogin = (event) => {\r\n    window.location.assign(\"/\");\r\n  };\r\n\r\n  if (Auth.isLoggedIn()) {\r\n    return (\r\n      <div className=\"tinderCards\">\r\n        <Cardrender settings={settings} likedDogs={likedDogs}/>\r\n      </div>\r\n    );\r\n  } else {\r\n    const style = {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    };\r\n\r\n    return (\r\n      <div style={style}>\r\n        <h1>You are not logged in!!</h1>\r\n        <Button onClick={goLogin}>Login</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\n//imports from material\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\n//imports from utils\r\nimport Auth from \"../utils/auth\";\r\nimport { QUERY_SINGLE_USER, QUERY_ME } from \"../utils/queries\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Profile.css\";\r\n\r\nexport default function Profile() {\r\n  const { loading, data } = useQuery(QUERY_SINGLE_USER, {\r\n    variables: { id: Auth.getProfileToken().data._id },\r\n  });\r\n  const me = useQuery(QUERY_ME);\r\n  if (!me.loading) {\r\n    console.log(me.data?.me);\r\n  }\r\n\r\n  const date = Date(data?.user.createdAt);\r\n  const joinedDate = new Date(date);\r\n  const month = joinedDate.toLocaleString(\"default\", { month: \"long\" });\r\n  const year = joinedDate.toLocaleString(\"default\", { year: \"numeric\" });\r\n\r\n  const likedDogs = me.data?.me.pets || [];\r\n\r\n  let profileDogs;\r\n  if (!loading) {\r\n    console.log(data?.user.pets);\r\n    profileDogs = likedDogs.slice(0, 3);\r\n  }\r\n\r\n  const goLogin = () => {\r\n    window.location.assign(\"/\");\r\n  };\r\n\r\n  if (Auth.isLoggedIn()) {\r\n    return (\r\n      <div className=\"userProfile\">\r\n        <h1>{me.data?.me.username}</h1>\r\n        <div className=\"avatar\">\r\n          <Avatar\r\n            alt=\"Avatar\"\r\n            src=\"https://avatarfiles.alphacoders.com/170/thumb-1920-170799.jpg\"\r\n            sx={{ width: 156, height: 156 }}\r\n          />\r\n          <ul>\r\n            <li>Location: {data?.user.location || \"N/A\"}</li>\r\n            <li>\r\n              Member Since: {month} {year}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"profileDogs\">\r\n          {loading ? (\r\n            <React.Fragment></React.Fragment>\r\n          ) : (\r\n            profileDogs.map((dog) => {\r\n              return (\r\n                <div key={dog._id} container className=\"dogCard\">\r\n                  <img\r\n                    class=\"dogImage\"\r\n                    src={dog.photo[0].small}\r\n                    alt={dog.name}\r\n                  />\r\n                  <h2>{dog.name}</h2>\r\n                  <p>{dog.breed.primary}</p>\r\n                  <p>\r\n                    {dog.size} | {dog.gender} | {dog.age}\r\n                  </p>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n        <div>\r\n          <Link to=\"/likes\" underline=\"none\" className=\"profileLink\">\r\n            <Button\r\n              className=\"profileBtn\"\r\n              style={{ backgroundColor: \"#F2F2F2\", color: \"#000\" }}\r\n              variant=\"contained\"\r\n            >\r\n              View all your liked dogs\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    const style = {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    };\r\n\r\n    return (\r\n      <div style={style}>\r\n        <h1>You are not logged in!!</h1>\r\n        <Button className=\"profileBtn\" onClick={goLogin}>\r\n          Login\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\n// imports from utils\r\nimport { LOGIN } from \"../../utils/mutations\";\r\nimport Auth from \"../../utils/auth.js\";\r\n// import from material\r\nimport { FormGroup } from '@mui/material';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n// import OutlinedInput from '@mui/material/OutlinedInput';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Button from '@mui/material/Button';\r\n// imported custom css\r\nimport './Login.css';\r\n\r\nexport default function LoginComp({flipChange}) {\r\n  const [loginState, setLoginState] = useState({ email: \"\", password: \"\" });\r\n  const [login, { error, data }] = useMutation(LOGIN);\r\n\r\n  // update state based on login input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setLoginState({\r\n      ...loginState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit login\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...loginState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setLoginState({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"front loginCard\" >\r\n      {data ? (\r\n        <p>\r\n          Success!\r\n        </p>\r\n    ) : (\r\n      <FormGroup className='form-containerCustom'>\r\n          <FormLabel align=\"center\" fontFamily=\"Source San Pro\" fontStyle=\"italic\" className='labelFont'>\r\n              Login to continue where you left off!\r\n          </FormLabel>\r\n          <div className='emailCustom'>\r\n            <InputLabel htmlFor=\"my-input\" className='labelFont'>\r\n              Email\r\n            </InputLabel>\r\n            <Input \r\n                id=\"email\" \r\n                aria-describedby=\"my-helper-text\"\r\n                name='email'\r\n                type='email'\r\n                value={loginState.email}\r\n                onChange={handleChange}\r\n                className='inputField'\r\n            />\r\n          </div>\r\n          <div className='passwordCustom'>\r\n            <InputLabel htmlFor=\"my-input\" className='labelFont'>\r\n              Password\r\n            </InputLabel>\r\n            <Input \r\n                id=\"password\" \r\n                required={true} \r\n                aria-describedby=\"my-helper-text\" \r\n                name='password'\r\n                type='password'\r\n                onChange={handleChange}\r\n                value={loginState.password}\r\n                className='inputField'\r\n            />\r\n            <FormHelperText id=\"password helper\" className='helperFont'>\r\n              Forgot your password?\r\n            </FormHelperText>\r\n          </div>\r\n          <Button \r\n            variant=\"contained\" \r\n            type=\"submit\"\r\n            onClick={handleFormSubmit}\r\n            style={{marginTop: '5vh', width: '35%', maxWidth: '175px', alignItems: 'center',}}\r\n            className='labelFont'>\r\n              Login\r\n          </Button>\r\n          <p align=\"center\" className=\"labelFont\">\r\n          Don't have an account?{\" \"}\r\n            <Button onClick={flipChange} className=\"labelFont\">Sign Up</Button>\r\n          </p>\r\n      </FormGroup>\r\n      )}\r\n      {error && (\r\n        <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n// import ReactDOM from 'react-dom';\r\nimport { useMutation } from '@apollo/client';\r\n// import from material\r\nimport { FormGroup } from '@mui/material';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\nimport Input from '@mui/material/Input';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n// import OutlinedInput from '@mui/material/OutlinedInput';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport Button from '@mui/material/Button';\r\n// import from utils\r\nimport { ADD_USER } from '../../utils/mutations';\r\nimport Auth from '../../utils/auth';\r\n\r\nexport default function Signup({flipChange}) {\r\n\r\n//create a state to keep track of form values\r\n\r\n    const [formState, setFormState] = useState({ \r\n        username: '', \r\n        email: '', \r\n        password: '',\r\n        location: '' });\r\n\r\n    const [addUser] = useMutation(ADD_USER);\r\n\r\n    // attempt to create the user token\r\n    const clickHandler = async (event)=>{\r\n        // console.log('clickHandler being hit')\r\n        event.preventDefault();\r\n        try {\r\n            const { data } = await addUser({\r\n              variables: { ...formState },\r\n            });\r\n      \r\n            Auth.login(data.addUser.token);\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n        };\r\n\r\n    // set the state to reflect whatever is in the input fields\r\n    const changeHandler = (event)=> {\r\n        const { name, value } = event.target;\r\n    \r\n        setFormState({\r\n            ...formState,\r\n            [name]: value,\r\n        });\r\n        console.log(formState)\r\n    };\r\n\r\n    return (\r\n    <div className=\"back signupCard\">\r\n        <FormGroup className='form-containerCustom'>\r\n            <FormLabel align=\"center\" fontFamily=\"Source San Pro\" fontStyle=\"italic\" className='labelFont'>\r\n                Sign up to create a profile and start searching!\r\n            </FormLabel>\r\n            <div className='emailCustom'>\r\n                <InputLabel htmlFor=\"my-input\" className='labelFont'>\r\n                    Email\r\n                </InputLabel>\r\n                <Input \r\n                    id=\"signUpEmail\"\r\n                    aria-describedby=\"my-helper-text\"\r\n                    name='email'\r\n                    type='email'\r\n                    value={formState.email}\r\n                    onChange={changeHandler}\r\n                    className='inputField'\r\n                />\r\n                <FormHelperText id=\"emailHelper\" className='helperFont'>\r\n                    We'll never share your email.\r\n                </FormHelperText>\r\n            </div>\r\n            <div className='usernameCustom'>\r\n                <InputLabel htmlFor=\"my-input\" className='labelFont'>\r\n                    Username\r\n                </InputLabel>\r\n                <Input \r\n                    id=\"username\" \r\n                    required={true} \r\n                    aria-describedby=\"my-helper-text\"\r\n                    name='username'\r\n                    type='text'\r\n                    onChange={changeHandler}\r\n                    value={formState.username}\r\n                    className='inputField'\r\n                />\r\n                <FormHelperText id=\"username helper\" className='helperFont'>\r\n                    Make your username something unique!\r\n                </FormHelperText>\r\n            </div>\r\n            <div className='passwordCustom'>\r\n                <InputLabel htmlFor=\"my-input\" className='labelFont'>\r\n                    Password\r\n                </InputLabel>\r\n                <Input \r\n                    id=\"signUpPassword\" \r\n                    required={true} \r\n                    aria-describedby=\"my-helper-text\" \r\n                    name='password'\r\n                    type='password'\r\n                    onChange={changeHandler}\r\n                    value={formState.password}\r\n                    className='inputField'\r\n                />\r\n                <FormHelperText id=\"password helper\" className='helperFont'>\r\n                    Passwords must be at least 7 characters, alphanumeric only.\r\n                </FormHelperText>\r\n            </div>\r\n            <div className='locationCustom'>\r\n                <InputLabel htmlFor=\"my-input\" className='labelFont'>\r\n                    Location\r\n                </InputLabel>\r\n                <Input \r\n                    id=\"location\" \r\n                    required={true} \r\n                    aria-describedby=\"my-helper-text\" \r\n                    name='location'\r\n                    type='text'\r\n                    onChange={changeHandler}\r\n                    value={formState.location}\r\n                    className='inputField'\r\n                />\r\n                <FormHelperText id=\"location helper\" className='helperFont'>\r\n                    Where would you like to find a dog?\r\n                </FormHelperText>\r\n            </div>\r\n            <Button \r\n                variant=\"contained\" \r\n                type=\"submit\"\r\n                onClick={clickHandler}\r\n                style={{marginTop: '5vh', width: '35%', maxWidth: '175px', alignItems: 'center',}}>\r\n                  Sign Up\r\n            </Button>\r\n            <p align=\"center\" className=\"labelFont\">\r\n                Already have an account?{\" \"}\r\n                <Button onClick={flipChange} className=\"labelFont\">Log In</Button>\r\n            </p>\r\n        </FormGroup>\r\n    </div>);\r\n};","import React, { useState } from \"react\";\r\n// imported utils files\r\nimport Auth from \"../utils/auth\";\r\n// imported page files\r\nimport Profile from \"./Profile.js\";\r\n// imported component files\r\nimport LoginComp from \"../components/Login/index.js\";\r\nimport Signup from \"../components/Signup/index\";\r\n// imported mui componets\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { Grid } from \"@mui/material\";\r\n// imported custom css\r\nimport \"./Login.css\";\r\n\r\nexport default function Login() {\r\n  const [flipState, setFlipState] = useState(\"content\");\r\n\r\n  const flipChange = (event) => {\r\n    if (flipState === \"content\") {\r\n      setFlipState(\"content contentTwo\");\r\n    } else {\r\n      setFlipState(\"content\");\r\n    }\r\n  };\r\n  \r\n  if (Auth.isLoggedIn()) {\r\n    return <Profile />;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"grid\",\r\n        gridAutoColumns: \"1fr\",\r\n        gap: 3,\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid container className=\"login-signupContainer\">\r\n          <Paper elevation={6} className=\"login-signupCard\">\r\n            <h2\r\n              align=\"center\"\r\n              className='titleFont'\r\n            >\r\n              Search hundreds of animal rescue organizations to find your\r\n              perfect rescue dog.\r\n            </h2>\r\n            <Grid item className=\"flippyCard\">\r\n              <div className={flipState}>\r\n                <LoginComp flipChange={flipChange}/>\r\n                <Signup flipChange={flipChange}/>\r\n              </div>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n// imports from material\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport Switch from '@mui/material/Switch';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormLabel from '@mui/material/FormLabel';\r\n// imports from utils\r\nimport Auth from '../utils/auth';\r\nimport './Settings.css'\r\nimport {UPDATE_SETTINGS, REMOVE_USER} from '../utils/mutations';\r\nimport {QUERY_SETTINGS} from '../utils/queries';\r\nimport {useQuery, useMutation} from '@apollo/client';\r\n\r\nexport default function Settings() {\r\n  const {loading, data} =\r\n    useQuery(QUERY_SETTINGS, {\r\n    variables: {userId: Auth.getProfileToken().data._id}\r\n  });\r\n  // console.log('QUERY_SETTINGS = ',data?.settings);\r\n  let prevAge;\r\n  let prevSize;\r\n  let prevTrained;\r\n  if(!loading) {\r\n      prevAge = data?.settings.age;\r\n      prevSize = data?.settings.size;\r\n      prevTrained = data?.settings.house_trained;\r\n  }\r\n   \r\n  console.log('prevAge', prevAge, 'prevSize', prevSize, 'prevTrained', prevTrained);\r\n\r\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\r\n  const [removeUser] = useMutation(REMOVE_USER);\r\n  // initializing the state lets us update it for some reason\r\n  const [age, setAge] = useState(null);\r\n  const [size, setSize] = useState(null);\r\n  const [trained, setTrained] = useState(null);\r\n  const [ageFlag, setAgeFlag] = useState(false);\r\n  const [sizeFlag, setSizeFlag] = useState(false);\r\n  const [trainedFlag, setTrainedFlag] = useState(false);\r\n  const isMounted = useRef(false);\r\n\r\n  // handle functions set the states, this hook will make the DB update\r\n  useEffect(()=> {\r\n    if (isMounted.current){\r\n    // console.log(`age = ${age} size = ${size} trained = ${trained}`);\r\n    handleSettingsChange();\r\n    } else {\r\n      isMounted.current = true\r\n    }\r\n  },[age,size,trained]);\r\n\r\n  const goLogin = (event) => {\r\n    window.location.assign(\"/\");\r\n  };\r\n  const handleAge = (event) => {\r\n    console.log('ageflag = ',ageFlag);\r\n    console.log('sizeFlag = ',sizeFlag);\r\n    console.log('trainedflag = ',trainedFlag);\r\n    setAgeFlag(true);\r\n    setAge(event.target.value);\r\n    prevAge = age;\r\n  };\r\n  const handleSize = (event) => {\r\n    console.log('ageflag = ',ageFlag);\r\n    console.log('sizeFlag = ',sizeFlag);\r\n    console.log('trainedflag = ',trainedFlag);\r\n    setSizeFlag(true);\r\n    setSize(event.target.value);\r\n    prevSize = size;\r\n  };\r\n  const handleTrained = () => {\r\n    console.log('ageflag = ',ageFlag);\r\n    console.log('sizeFlag = ',sizeFlag);\r\n    console.log('trainedflag = ',trainedFlag);\r\n    setTrainedFlag(true);\r\n    if(trained) {\r\n      setTrained(null);\r\n      prevTrained = trained;\r\n    }else {\r\n      setTrained(true);\r\n      prevTrained = trained;\r\n    }\r\n    \r\n  };\r\n  const handleLogout = () => {\r\n    Auth.logout();\r\n  };\r\n\r\n  const handleDelete = async (e) => {\r\n    await removeUser({\r\n      variables: {\r\n        _id: Auth.getProfileToken().data._id\r\n      }\r\n    });\r\n    Auth.logout();\r\n  }\r\n\r\n  const handleSettingsChange = async() => {\r\n    try{\r\n      switch(true) {\r\n        case (ageFlag && sizeFlag && trainedFlag): {\r\n          await updateSettings({\r\n            variables: {userId:Auth.getProfileToken().data._id, age, size, house_trained: trained}\r\n          });\r\n          break;\r\n        } \r\n        case (ageFlag && trainedFlag): {\r\n          await updateSettings({\r\n            variables: {userId:Auth.getProfileToken().data._id, age, size:prevSize, house_trained: trained}\r\n          });\r\n          break;\r\n        }\r\n        case (trainedFlag && sizeFlag): {\r\n          await updateSettings({\r\n            variables: {userId:Auth.getProfileToken().data._id, age:prevAge, size, house_trained: trained}\r\n          });\r\n          break;\r\n        }\r\n        case(ageFlag && sizeFlag): {\r\n          await updateSettings({\r\n            variables: {userId:Auth.getProfileToken().data._id, age, size, house_trained: prevTrained}\r\n          });\r\n          break;\r\n        }\r\n        case(ageFlag): {\r\n          await updateSettings({\r\n            variables: {userId:Auth.getProfileToken().data._id, age, size:prevSize, house_trained: prevTrained}\r\n          });\r\n          break;\r\n        }\r\n        case(sizeFlag): {\r\n          await updateSettings({\r\n            variables: {userId:Auth.getProfileToken().data._id, age:prevAge, size, house_trained: prevTrained}\r\n          });\r\n          break;\r\n        }\r\n        case(trainedFlag): {\r\n          await updateSettings({\r\n            variables: {userId:Auth.getProfileToken().data._id, age:prevAge, size: prevSize, house_trained: trained}\r\n          });\r\n          break;\r\n        }\r\n        default: {\r\n          console.error(\"default case firing\");\r\n          break;\r\n        }\r\n      }\r\n    }catch(err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  if (Auth.isLoggedIn()) {\r\n    return (\r\n\r\n      <Box sx={{\r\n        display: 'grid',\r\n        gridAutoColumns: '1fr',\r\n        gap: 3,\r\n        alignItems: 'center',\r\n        paddingBottom: 7,\r\n      }}\r\n    > {loading ? <div>Loading settings...</div> :\r\n      <React.Fragment>\r\n      <Paper className='settingsContainer' elevation = {6} >\r\n          <h2 align=\"center\">User Settings</h2>\r\n  \r\n        <FormControl fullWidth style={{marginBottom: '20px'}} className='settingsForm'>\r\n          <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select-label\"\r\n            value={prevAge}\r\n            label=\"Age\"\r\n            type=\"age\"\r\n            className='settingsInput'\r\n            onChange={handleAge}\r\n          >\r\n            <MenuItem value={null}>No Preference</MenuItem>\r\n            <MenuItem value={'Baby'}>Baby</MenuItem>\r\n            <MenuItem value={'Young'}>Young</MenuItem>\r\n            <MenuItem value={'Adult'}>Adult</MenuItem>\r\n            <MenuItem value={'Senior'}>Senior</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n    \r\n        <FormControl fullWidth style={{marginTop: '20px', marginBottom:'10px'}} className='settingsForm'>\r\n          <InputLabel id=\"size-select\">Size</InputLabel>\r\n          <Select\r\n            labelId=\"size-select\"\r\n            id=\"demo-simple-select\"\r\n            value={prevSize}\r\n            label=\"Size\"\r\n            className='settingsInput'\r\n            onChange={handleSize}\r\n          >\r\n            <MenuItem value={null}>No Preference</MenuItem>\r\n            <MenuItem value={'Small'}>Small</MenuItem>\r\n            <MenuItem value={'Medium'}>Medium</MenuItem>\r\n            <MenuItem value={'Large'}>Large</MenuItem>\r\n            <MenuItem value={'Extra Large'}>Extra Large</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\"></FormLabel>\r\n      <FormGroup aria-label=\"position\" row>\r\n        <FormControlLabel\r\n          value={prevTrained}\r\n          control={<Switch color=\"primary\" checked={prevTrained}/>}\r\n          label=\"House-trained\"\r\n          labelPlacement=\"start\"\r\n          className='settingsInput'\r\n          onChange={handleTrained}\r\n        />\r\n        </FormGroup>\r\n      </FormControl>\r\n        </Paper>\r\n        \r\n        <Button variant ='outlined' color='error'onClick={handleLogout} className='settingsLogout'>Logout</Button>\r\n        <Button variant ='outlined' color='error'onClick={handleDelete} className='settingsLogout'>Delete Account</Button>\r\n        </React.Fragment> \r\n      }\r\n      </Box>\r\n    );\r\n  } else {\r\n    const style = {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    };\r\n\r\n    return (\r\n      <div style={style}>\r\n        <h1>You are not logged in!!</h1>\r\n        <Button onClick={goLogin}>Login</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Detailed view of each dog that the user has liked/swiped right on\r\nimport React from \"react\";\r\n// imports from material\r\nimport {Grid}  from '@mui/material';\r\nimport Paper from '@mui/material/Paper';\r\nimport Auth from \"../../utils/auth\";\r\n\r\nexport default function LikedCards(props) {\r\n\r\n    function yesNo (e) {\r\n        if (e === true) {\r\n            return 'Yes'\r\n        }else{\r\n            return 'No'\r\n        }\r\n    }\r\n    const removePet = async (dogId) => {\r\n        await props.removeUserPets({\r\n            variables: {\r\n                userId: Auth.getProfileToken().data._id,\r\n                dog: dogId\r\n            }\r\n        });\r\n        window.location.reload();\r\n    }\r\n\r\n    return(<div>\r\n            <Paper elevation = {6} style={{borderRadius: 15}} >\r\n                <Grid item xs={4} key={props.dog._id} container ={true} className='likedDogsContainer' style={{ marginBottom:15, maxWidth:\"90vw\", alignItems:\"center\", justifyContent:\"center\", fontFamily:\"Oxygen\"}}>\r\n                <button className='likesXBtn' onClick={() => removePet(props.dog._id)}><img src='./images/x.png' className='likesXImg' alt='x-out'></img></button>\r\n                        <img src={props.dog.photo[0].medium} alt='dog' />\r\n                        <div className='likedDogsEx'>\r\n                            <h2>{props.dog.name}</h2>\r\n                            <p>{props.dog.breed.primary}</p>\r\n                            <p>{props.dog.size} | {props.dog.gender} | {props.dog.age}</p>\r\n                        </div>\r\n                        <div>\r\n                            <ul>\r\n                                <li>Shelter/Organization: {props.dog.organization}</li>\r\n                                <li>Location: {props.dog.location}</li>\r\n                                <li>Spayed: {yesNo(props.dog.spayed)}</li>\r\n                                <li>House Trained: {yesNo(props.dog.house_trained)}</li>\r\n                                <li>Shots: {yesNo(props.dog.shots)}</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className='likedDogsMeet'>\r\n                            <h3>Meet {props.dog.name}!</h3>\r\n                        </div>\r\n                        <p>{props.dog.description}</p>\r\n                        <a href={props.dog.url} target='_blank' rel=\"noreferrer noopener\">Learn more...</a>\r\n                    </Grid>\r\n                </Paper>\r\n    </div>);\r\n}","import React from \"react\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\n// import from components\r\nimport LikedCards from \"../components/LikedCards/index\";\r\n// import from material\r\nimport { Grid } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n// import from utils\r\nimport { QUERY_ME } from \"../utils/queries\";\r\nimport { REMOVE_USER_PETS } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\nimport './Likes.css'\r\n\r\nexport default function Likes() {\r\n  const me = useQuery(QUERY_ME);\r\n  const [removeUserPets] = useMutation(REMOVE_USER_PETS);\r\n  const likedDogs = me.data?.me.pets || [];\r\n\r\n  const goLogin = (event) => {\r\n    window.location.assign(\"/\");\r\n  };\r\n  \r\n  if (Auth.isLoggedIn()) {\r\n    \r\n    if (me.loading) {\r\n      return <div>...loading</div>;\r\n    }\r\n\r\n    if (!likedDogs.length) {\r\n      return <h3>No liked dogs yet!</h3>;\r\n    }\r\n\r\n    console.log(likedDogs);\r\n\r\n\r\n    return (\r\n      <Box>\r\n        <h2 className='likesHeader'>Your Liked Dogs</h2>\r\n        \r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\r\n          <Grid item>\r\n            {likedDogs.map((dog) => <LikedCards dog={dog} removeUserPets={removeUserPets}/>)}\r\n          </Grid>\r\n        </Grid>\r\n        \r\n      </Box>\r\n    );\r\n  } else {\r\n    const style = {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    };\r\n\r\n    return (\r\n      <div style={style}>\r\n        <h1>You are not logged in!!</h1>\r\n        <Button onClick={goLogin}>Login</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { \r\n  ApolloClient, \r\n  InMemoryCache, \r\n  ApolloProvider,\r\n  createHttpLink, \r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n// import from components\r\nimport Header from './components/Header';\r\nimport Navbar from './components/Navbar';\r\n// import from pages\r\nimport Cards  from './pages/Cards';\r\nimport Login from './pages/Login';\r\nimport Profile from './pages/Profile';\r\nimport Settings from './pages/Settings';\r\nimport Likes from './pages/Likes';\r\n// import from utils\r\nimport Auth from \"./utils/auth\";\r\n// import from material\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\n// Construct our main GraphQL API endpoint\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('id_token');\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\n\r\n\r\nconst theme = createTheme (theme => ({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      main: '#fafafa',\r\n    },\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontFamily: 'Pacifico',\r\n    },\r\n    fontFamily: 'Oxygen',\r\n    h2: {\r\n      fontFamily: 'Source Sans Pro',\r\n    },\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n\r\n  return (\r\n\r\n<ThemeProvider theme = {theme}>\r\n\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <Header />\r\n          <div>\r\n            <Route exact path=\"/\">\r\n              <Login/>\r\n            </Route>\r\n            <Route exact path=\"/sheltr\">\r\n              <Cards />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/likes\">\r\n              <Likes />\r\n            </Route>\r\n            <Route exact path=\"/settings\">\r\n              <Settings />\r\n            </Route>\r\n          </div>\r\n          {Auth.isLoggedIn() && <Navbar />}\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n\r\n </ThemeProvider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}