{"version":3,"sources":["components/Header/index.js","components/Navbar/index.js","utils/queries.js","utils/mutations.js","utils/auth.js","components/Cardrender/index.js","pages/Cards.js","pages/Profile.js","components/Login/index.js","components/Signup/index.js","pages/Login.js","pages/Settings.js","components/LikedCards/index.js","pages/Likes.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonAppBar","Box","sx","AppBar","position","backgroundColor","Toolbar","className","src","alt","href","style","textDecoration","color","Navbar","React","useState","value","setValue","ref","useRef","width","window","innerWidth","dimensions","setDimensions","useEffect","addEventListener","pb","CssBaseline","Paper","elevation","BottomNavigation","showlabels","alignItems","onChange","event","newValue","BottomNavigationAction","label","icon","role","QUERY_ME","gql","QUERY_SINGLE_USER","QUERY_ALL_DOGS","QUERY_SETTINGS","LOGIN","ADD_USER","UPDATE_SETTINGS","UPDATE_USER_PETS","REMOVE_USER","REMOVE_USER_PETS","tokenId","localStorage","setItem","location","assign","removeItem","getItem","token","decode","exp","Date","now","err","this","getToken","checkTokenExpiration","Cardrender","props","dogCardData","lastDirection","setLastDirection","settings","useQuery","loading","data","useMutation","updateUserPets","dogs","console","log","length","age","size","house_trained","filter","dog","error","dogsToFilter","likedDogs","map","_id","finalDogData","includes","swiped","direction","a","outOfFrame","id","variables","Auth","getProfileToken","key","onSwipe","onCardLeftScreen","photo","medium","name","Cards","userId","pets","isLoggedIn","display","flexDirection","justifyContent","textAlign","Button","onClick","Profile","me","profileDogs","date","user","createdAt","joinedDate","month","toLocaleString","year","slice","username","Avatar","height","Fragment","container","class","small","breed","primary","gender","to","underline","variant","LoginComp","flipChange","email","password","loginState","setLoginState","login","handleChange","target","handleFormSubmit","preventDefault","FormGroup","FormLabel","align","fontFamily","fontStyle","InputLabel","htmlFor","Input","aria-describedby","type","required","FormHelperText","marginTop","maxWidth","message","Signup","formState","setFormState","addUser","clickHandler","changeHandler","Login","flipState","setFlipState","gridAutoColumns","gap","Grid","item","Settings","prevAge","prevSize","prevTrained","updateSettings","removeUser","setAge","setSize","trained","setTrained","ageFlag","setAgeFlag","sizeFlag","setSizeFlag","trainedFlag","setTrainedFlag","isMounted","current","handleSettingsChange","handleDelete","e","logout","paddingBottom","FormControl","fullWidth","marginBottom","Select","labelId","MenuItem","component","aria-label","row","FormControlLabel","control","Switch","checked","labelPlacement","LikedCards","yesNo","removePet","dogId","removeUserPets","reload","borderRadius","xs","organization","spayed","shots","description","url","rel","Likes","spacing","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","theme","createTheme","palette","main","typography","h1","h2","App","ThemeProvider","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43c81def.chunk.js","sourcesContent":["import * as React from 'react';\n// imports from material\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport './Header.css';\n\n\n\nexport default function ButtonAppBar() {\n  return (\n    <Box sx={{ }}>\n      <AppBar sx = {{ position:\"static\", backgroundColor:\"transparent\"}} >\n        <Toolbar className='sheltrHeader'>\n        <img src=\"./images/sheltr_logo2.png\" alt=\"Sheltr\" className='headerImg'/>\n         <a href='/sheltr' className='headerText' style={{ textDecoration:'none', color:'#000' }}>Sheltr</a>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// imports from material\nimport Box from \"@mui/material/Box\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport Paper from \"@mui/material/Paper\";\nimport './navbar.css'\n\nexport default function Navbar() {\n  const [value, setValue] = React.useState(0);\n  const ref = React.useRef(null);\n\n  const [dimensions, setDimensions] = React.useState({ \n    width: window.innerWidth\n  })\n  React.useEffect(() => {\n    function handleResize() {\n      setDimensions({\n        width: window.innerWidth\n      })\n  }\n    window.addEventListener('resize', handleResize)\n  }, [])\n\n\n  return (\n    <Box sx={{ pb: 7 }} ref={ref}>\n      {dimensions.width < 1200 ? \n      (\n      <div>\n      <CssBaseline />\n\n      <Paper\n        className='bottomNavbarContainer'\n        elevation={3}\n      >\n        <BottomNavigation\n          showlabels=\"true\"\n          value={value}\n          sx={{alignItems:'center'}}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n        >\n          <a href=\"/profile\">\n            <BottomNavigationAction\n              label=\"Profile\"\n              icon={<img src=\"./images/profileblank2.png\" alt=\"profile\" />}\n            />\n          </a>\n          <a href=\"/sheltr\">\n            <BottomNavigationAction\n              label=\"Sheltr\"\n              icon={<img src=\"./images/pawblank2.png\" alt=\"sheltr\"/>}\n            />\n          </a>\n          <a href=\"/likes\">\n            <BottomNavigationAction\n              label=\"Likes\"\n              icon={<img src=\"./images/heartblank2.png\" alt=\"liked cards\"/>}\n            />\n          </a>\n          <a href=\"/settings\">\n            <BottomNavigationAction\n              label=\"Settings\"\n              icon={<img src=\"./images/settingsblank2.png\" alt=\"settings\"/>}\n            />\n          </a>\n        </BottomNavigation>\n      </Paper>\n      </div>)\n\n    :\n\n    (<div className='topNavContainer'>\n    <nav role=\"navigation\">\n        <ul className='topNavUl'>\n            <li className='topNavLi'>\n                <a href='/profile' className='topNavLink'>\n                    <img src='./images/profileblank.png' alt='profile'></img>\n                    Profile\n                </a>\n            </li>\n            <li className='topNavLi'>\n                <a href='/sheltr' className='topNavLink'>\n                    <img src='./images/pawblank.png' alt='sheltr'></img>\n                    Sheltr\n                </a>\n            </li>\n            <li className='topNavLi'>\n                <a href='/likes' className='topNavLink'>\n                    <img src='./images/heartblank.png' alt='heart'></img>\n                    Likes\n                </a>\n            </li>\n            <li className='topNavLi'>\n                <a href='/settings' className='topNavLink'>\n                    <img src='./images/settingsblank.png' alt='settings'></img>\n                    Settings\n                </a>\n            </li>\n        </ul>\n    </nav>\n    </div>\n    )\n    }\n    </Box>\n  );\n}\n\n","\nimport {gql} from \"@apollo/client\";\n\nexport const QUERY_ME = gql`\nquery me {\n    me{\n        username\n        email\n        password\n        pets {\n            _id\n            name\n            breed {\n            primary\n            secondary\n            mixed\n            unknown\n            }\n            age\n            size\n            gender\n            photo {\n            small\n            medium\n            large\n            full\n            }\n            url\n            location\n            description\n            spayed\n            house_trained\n            shots\n            organization\n        }\n    }\n}\n`;\n\nexport const QUERY_SINGLE_USER = gql`\n    query getOneUser($id: ID!) {\n        user(_id: $id){\n            username\n            email\n            password\n            createdAt\n            location\n            pets {\n                _id\n                name\n                breed {\n                primary\n                secondary\n                mixed\n                unknown\n                }\n                age\n                size\n                gender\n                photo {\n                small\n                medium\n                large\n                full\n                }\n                url\n                location\n                description\n                spayed\n                house_trained\n                shots\n                organization\n            }\n        }\n    }\n`;\n\nexport const QUERY_ALL_DOGS = gql`\n    query getAllDogs {\n        dogs{\n        _id\n        name\n        breed {\n        primary\n        secondary\n        mixed\n        unknown\n        }\n        age\n        gender\n        size\n        gender\n        photo {\n        small\n        medium\n        large\n        full\n        }\n        url\n        location\n        description\n        spayed\n        house_trained\n        shots\n        organization\n    }\n}\n`;\n\nexport const QUERY_SETTINGS = gql`\n    query getSettings($userId: ID!) {\n        settings(userId: $userId) {\n        _id\n        userId{\n            username\n            pets {\n                _id\n                name\n                breed {\n                primary\n                secondary\n                mixed\n                unknown\n                }\n                age\n                gender\n                size\n                gender\n                photo {\n                small\n                medium\n                large\n                full\n                }\n                url\n                location\n                description\n                spayed\n                house_trained\n                shots\n                organization\n            }\n        }\n        age\n        size\n        house_trained\n        }\n    }\n`;\n\nexport const ALL_USERS = gql`\n    query allUsers {\n        _id\n        username\n        email\n    }\n`;","import {\n  gql\n} from '@apollo/client'\n\nexport const LOGIN = gql `\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql `\n  mutation addUser(\n    $username: String!\n    $email: String!\n    $password: String!\n    $location: String!\n  ) {\n    addUser(\n      username: $username\n      email: $email\n      password: $password\n      location: $location\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_SETTINGS = gql `\nmutation addSettings($userId: ID!, $age: String, $size: String, $house_trained: Boolean) {\n  addSettings(userId: $userId, age: $age, size:$size, house_trained:$house_trained) {\n    _id\n    userId {\n      username\n    }\n    age\n    size\n    house_trained\n  }\n}\n`;\n\nexport const UPDATE_SETTINGS = gql `\nmutation updateSettings($userId: ID!, $age:String, $size:String,$house_trained:Boolean) {\n  updateSettings(userId: $userId, age: $age, size: $size, house_trained: $house_trained) {\n    _id\n    userId {\n      username\n    }\n    age\n    size\n    house_trained\n  }\n}\n`;\n\nexport const UPDATE_USER_PETS = gql `\n  mutation updateUserPets(\n    $_id: ID!\n    $dog: ID!\n  ) {\n      updateUserPets (\n          _id: $_id\n          dog: $dog\n      ) {\n        username\n        email\n        pets{\n          _id\n          name\n        }\n      }\n  }\n`;\n\nexport const REMOVE_USER = gql`\n  mutation removeUser(\n    $_id: ID!\n  ) {\n    removeUser (\n      _id: $_id\n    ){\n      _id\n      username\n    }\n  }\n`;\n\nexport const REMOVE_USER_PETS = gql`\n  mutation removeUserPets($userId: ID!, $dog: ID!) {\n    removeUserPets(userId: $userId, dog: $dog) {\n      username\n      email\n      password\n      pets {\n          name\n          breed {\n            primary\n            secondary\n            mixed\n            unknown\n          }\n          age\n          size\n          gender\n          photo {\n            small\n            medium\n            large\n            full\n          }\n          url\n          location\n          description\n          spayed\n          house_trained\n          shots\n          organization\n      }\n    }\n  }\n`","import decode from 'jwt-decode';\n\nclass AuthService {\n    //Saves user token\n    login(tokenId) {\n        localStorage.setItem('id_token', tokenId);\n        \n        window.location.assign('/profile');\n    }\n    //deletes user token\n    logout() {\n        localStorage.removeItem('id_token');\n        window.location.assign('/');\n    }\n    //get user token from localstorage\n    getToken() {\n        return localStorage.getItem('id_token');\n    }\n\n    checkTokenExpiration(token) {\n        try {\n            const decoded = decode(token);\n\n            if(decoded.exp < Date.now() / 1000) {\n                return true;\n            } else {\n                return false;\n            }\n        } catch(err) {\n            return false;\n        }\n    }\n\n    getProfileToken() {\n        return decode(this.getToken());\n    }\n\n    isLoggedIn() {\n        const token = this.getToken();\n        return !!token && !this.checkTokenExpiration(token);\n    }\n};\n\nexport default new AuthService();","import React, { useState } from \"react\";\nimport TinderCard from 'react-tinder-card';\nimport { \n    QUERY_ALL_DOGS, \n} from \"../../utils/queries\";\nimport {UPDATE_USER_PETS} from \"../../utils/mutations\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport Auth from \"../../utils/auth\";\n\nexport default function Cardrender(props) {\n    const [lastDirection, setLastDirection] = useState();\n    \n    const settings = props.settings;\n    const {loading, data} = useQuery(QUERY_ALL_DOGS);\n    const [updateUserPets] = useMutation(UPDATE_USER_PETS);\n    const dogs = data?.dogs;\n    let dogCardData;\n    if(loading) {\n        return <div>Loading cards...</div>\n    }\n    console.log(props.settings);\n    if(data?.dogs.length !== 0) {\n        switch(true) {\n            case ((settings.age !== null) && (settings.size !== null) && (settings.house_trained !== null)): {\n                console.log(\"age, size, houseTrained firing\")\n                dogCardData = dogs.filter((dog) => (dog.age === settings.age) && (dog.size === settings.size) && (dog.house_trained === settings.house_trained));\n                break;\n            }\n            case ((settings.age !== null) && (settings.size !== null)): {\n                console.log(\"age, size firing\");\n                dogCardData = dogs.filter((dog) => (dog.age === settings.age) && (dog.size === settings.size));\n                break;\n            }\n            case ((settings.age !== null) && (settings.house_trained !== null)): {\n                console.log(\"age, houseTrained firing\");\n                dogCardData = dogs.filter((dog) => (dog.age === settings.age) && (dog.house_trained === settings.house_trained));\n                break;\n            }\n            case ((settings.age !== null)): {\n                console.log(\"settings.age case firing\");\n                dogCardData = dogs.filter((dog) => dog.age === settings.age);\n                break;\n            }\n            case((settings.size !== null) && (settings.house_trained !== null)): {\n                console.log(\"size, houseTrained firing\");\n                dogCardData = dogs.filter((dog) => (dog.size === settings.size) && (dog.house_trained === settings.house_trained));\n                break;\n            }\n            case((settings.size !== null)): {\n                console.log(\"size firing\");\n                dogCardData = dogs.filter((dog) => dog.size === settings.size);\n                break;\n            }\n            case((settings.house_trained !== null)): {\n                console.log(\"houseTrained firing\");\n                dogCardData = dogs.filter((dog) => dog.house_trained === settings.house_trained);\n                break;\n            }\n            case((settings.house_trained === null && settings.size === null && settings.age === null)): {\n                console.log(\"default case firing\");\n                dogCardData = dogs;\n                break;\n            }\n            default: {\n                console.error(\"Something went wrong\");\n                break;\n            }\n        }\n    }\n    const dogsToFilter = props.likedDogs.map((dog) => dog._id);\n    const finalDogData = dogCardData.filter((dog) => {\n        return !dogsToFilter.includes(dog._id);\n    });\n    const swiped = async (direction) => {\n        setLastDirection(direction);\n      }\n    const outOfFrame = async (direction, id) => {\n        console.log(\"Dog id\", id, \"\\nDirection\", direction);\n        if(direction === 'right') {\n            try {\n                    await updateUserPets({\n                    variables: {_id: Auth.getProfileToken().data._id, dog: id}\n                })\n            }catch(err) {\n                console.log(err);\n            }\n        }\n    }\n    if(dogCardData.length === 0) {\n        return (\n            <div>No Dogs Found! Change your filter settings to get more dogs!</div>\n        )\n    }\n\n    return(<div className='tinderContainer'>\n        {finalDogData.map((dog) => {\n\n            return(\n            <TinderCard className='swipe' key={dog._id} onSwipe={(direction) => swiped(direction)} onCardLeftScreen={(direction) => outOfFrame(direction, dog._id)}>\n                <img src={dog.photo[0].medium} alt={dog.name} className = \"swipeImg\"/>\n                <h2 className=\"swipeDogName\">{dog.name}</h2>\n                <p className=\"swipeDogLocation\">{dog.location}</p>\n            </TinderCard>)\n        })}\n        {lastDirection ? <h2>You swiped {lastDirection}</h2> : <h2></h2>}\n    </div>)\n}\n\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n// import from components\nimport Cardrender from \"../components/Cardrender\";\n// import from utils\nimport { QUERY_SETTINGS } from \"../utils/queries\";\nimport Auth from \"../utils/auth\";\n// import from material\nimport Button from \"@mui/material/Button\";\nimport \"./Cards.css\";\n\nexport default function Cards() {\n  const {loading, data} = useQuery(QUERY_SETTINGS, {\n      variables: {userId: Auth.getProfileToken().data._id}\n  });\n  let settings;\n  let likedDogs;\n  if(loading) {\n      return <div>Loading settings...</div>\n  } else {\n      settings = data?.settings;\n      likedDogs = data?.settings.userId.pets;\n  }\n\n  const goLogin = (event) => {\n    window.location.assign(\"/\");\n  };\n\n  if (Auth.isLoggedIn()) {\n    return (\n      <div className=\"tinderCards\">\n        <Cardrender settings={settings} likedDogs={likedDogs}/>\n      </div>\n    );\n  } else {\n    const style = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n    };\n\n    return (\n      <div style={style}>\n        <h1>You are not logged in!!</h1>\n        <Button onClick={goLogin}>Login</Button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\n//imports from material\nimport { Grid } from '@mui/material';\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from '@mui/material/Button'\n//imports from utils\nimport Auth from \"../utils/auth\";\nimport { QUERY_SINGLE_USER, QUERY_ME } from \"../utils/queries\";\nimport { Link } from \"react-router-dom\";\nimport './Profile.css'\n\n\nexport default function Profile() {\n  const { loading, data } = useQuery(QUERY_SINGLE_USER, {\n    variables: { id: Auth.getProfileToken().data._id },\n  });\n  const me = useQuery(QUERY_ME);\n  if(!me.loading) {\n    console.log(me.data?.me)\n  }\n\n  const date = Date(data?.user.createdAt)\n  const joinedDate = new Date(date)\n  const month = joinedDate.toLocaleString('default', { month: 'long' });\n  const year = joinedDate.toLocaleString('default', {year: 'numeric'});\n\n\n  const likedDogs = me.data?.me.pets || [];\n\n  let profileDogs;\n  if (!loading) {\n    console.log(data?.user.pets);\n    profileDogs = likedDogs.slice(0, 3);\n  }\n\n  const goLogin = () => {\n    window.location.assign(\"/\");\n  };\n\n  if (Auth.isLoggedIn()) {\n    return (\n    \n      <div className= \"userProfile\">\n        <h1>{me.data?.me.username}</h1>\n        <div className=\"avatar\">\n        <Avatar alt=\"Avatar\" src=\"https://avatarfiles.alphacoders.com/170/thumb-1920-170799.jpg\" sx={{ width: 156, height: 156 }} />\n        <ul>\n          <li>Location: {data?.user.location || 'N/A'}</li>\n          <li>Member Since: {month} {year}</li>\n        </ul>\n        </div>\n      \n        <div className=\"profileDogs\">\n\n            {loading ? (\n              <React.Fragment></React.Fragment>\n            ) : (\n              profileDogs.map((dog) => {\n                return (\n                  <div key={dog._id} container className = \"dogCard\">\n                          <img class=\"dogImage\" src={dog.photo[0].small} alt={dog.name} />\n                          <h2>{dog.name}</h2>\n                          <p>{dog.breed.primary}</p>\n                          <p>\n                            {dog.size} | {dog.gender} | {dog.age}\n                          </p>\n                          </div>\n                );\n              })\n            )}\n        </div>\n        <div> \n          <Link to=\"/likes\" underline=\"none\" className='profileLink'><Button className='profileBtn' style={{backgroundColor: '#F2F2F2', color: '#000'}} variant = \"contained\">View all your liked dogs</Button></Link>\n        </div>\n      </div>);\n  } else {\n    const style = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n    };\n\n    return (\n      <div style={style}>\n        <h1>You are not logged in!!</h1>\n        <Button className='profileBtn' onClick={goLogin}>Login</Button>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n// imports from utils\nimport { LOGIN } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth.js\";\n// import from material\nimport { FormGroup } from '@mui/material';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\n// import OutlinedInput from '@mui/material/OutlinedInput';\nimport FormLabel from '@mui/material/FormLabel';\nimport Button from '@mui/material/Button';\n// imported custom css\nimport './Login.css';\n\nexport default function LoginComp({flipChange}) {\n  const [loginState, setLoginState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN);\n\n  // update state based on login input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setLoginState({\n      ...loginState,\n      [name]: value,\n    });\n  };\n\n  // submit login\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const { data } = await login({\n        variables: { ...loginState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setLoginState({\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n    <div className=\"front loginCard\" >\n      {data ? (\n        <p>\n          Success!\n        </p>\n    ) : (\n      <FormGroup className='form-containerCustom'>\n          <FormLabel align=\"center\" fontFamily=\"Source San Pro\" fontStyle=\"italic\" className='labelFont'>\n              Login to continue where you left off!\n          </FormLabel>\n          <div className='emailCustom'>\n            <InputLabel htmlFor=\"my-input\" className='labelFont'>\n              Email\n            </InputLabel>\n            <Input \n                id=\"email\" \n                aria-describedby=\"my-helper-text\"\n                name='email'\n                type='email'\n                value={loginState.email}\n                onChange={handleChange}\n                className='inputField'\n            />\n          </div>\n          <div className='passwordCustom'>\n            <InputLabel htmlFor=\"my-input\" className='labelFont'>\n              Password\n            </InputLabel>\n            <Input \n                id=\"password\" \n                required={true} \n                aria-describedby=\"my-helper-text\" \n                name='password'\n                type='password'\n                onChange={handleChange}\n                value={loginState.password}\n                className='inputField'\n            />\n            <FormHelperText id=\"password helper\" className='helperFont'>\n              Forgot your password?\n            </FormHelperText>\n          </div>\n          <Button \n            variant=\"contained\" \n            type=\"submit\"\n            onClick={handleFormSubmit}\n            style={{marginTop: '5vh', width: '35%', maxWidth: '175px', alignItems: 'center',}}\n            className='labelFont'>\n              Login\n          </Button>\n          <p align=\"center\" className=\"labelFont\">\n          Don't have an account?{\" \"}\n            <Button onClick={flipChange} className=\"labelFont\">Sign Up</Button>\n          </p>\n      </FormGroup>\n      )}\n      {error && (\n        <div className=\"my-3 p-3 bg-danger text-white\">{error.message}</div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n// import ReactDOM from 'react-dom';\nimport { useMutation } from '@apollo/client';\n// import from material\nimport { FormGroup } from '@mui/material';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\n// import OutlinedInput from '@mui/material/OutlinedInput';\nimport FormLabel from '@mui/material/FormLabel';\nimport Button from '@mui/material/Button';\n// import from utils\nimport { ADD_USER } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nexport default function Signup({flipChange}) {\n\n//create a state to keep track of form values\n\n    const [formState, setFormState] = useState({ \n        username: '', \n        email: '', \n        password: '',\n        location: '' });\n\n    const [addUser] = useMutation(ADD_USER);\n\n    // attempt to create the user token\n    const clickHandler = async (event)=>{\n        // console.log('clickHandler being hit')\n        event.preventDefault();\n        try {\n            const { data } = await addUser({\n              variables: { ...formState },\n            });\n      \n            Auth.login(data.addUser.token);\n          } catch (e) {\n            console.error(e);\n          }\n        };\n\n    // set the state to reflect whatever is in the input fields\n    const changeHandler = (event)=> {\n        const { name, value } = event.target;\n    \n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n    <div className=\"back signupCard\">\n        <FormGroup className='form-containerCustom'>\n            <FormLabel align=\"center\" fontFamily=\"Source San Pro\" fontStyle=\"italic\" className='labelFont'>\n                Sign up to create a profile and start searching!\n            </FormLabel>\n            <div className='emailCustom'>\n                <InputLabel htmlFor=\"my-input\" className='labelFont'>\n                    Email\n                </InputLabel>\n                <Input \n                    id=\"email\"\n                    aria-describedby=\"my-helper-text\"\n                    name='email'\n                    type='email'\n                    value={formState.email}\n                    onChange={changeHandler}\n                    className='inputField'\n                />\n                <FormHelperText id=\"email helper\" className='helperFont'>\n                    We'll never share your email.\n                </FormHelperText>\n            </div>\n            <div className='usernameCustom'>\n                <InputLabel htmlFor=\"my-input\" className='labelFont'>\n                    Username\n                </InputLabel>\n                <Input \n                    id=\"username\" \n                    required={true} \n                    aria-describedby=\"my-helper-text\"\n                    name='username'\n                    type='text'\n                    onChange={changeHandler}\n                    value={formState.username}\n                    className='inputField'\n                />\n                <FormHelperText id=\"username helper\" className='helperFont'>\n                    Make your username something unique!\n                </FormHelperText>\n            </div>\n            <div className='passwordCustom'>\n                <InputLabel htmlFor=\"my-input\" className='labelFont'>\n                    Password\n                </InputLabel>\n                <Input \n                    id=\"password\" \n                    required={true} \n                    aria-describedby=\"my-helper-text\" \n                    name='password'\n                    type='password'\n                    onChange={changeHandler}\n                    value={formState.password}\n                    className='inputField'\n                />\n                <FormHelperText id=\"password helper\" className='helperFont'>\n                    Passwords must be at least 7 characters, alphanumeric only.\n                </FormHelperText>\n            </div>\n            <div className='locationCustom'>\n                <InputLabel htmlFor=\"my-input\" className='labelFont'>\n                    Location\n                </InputLabel>\n                <Input \n                    id=\"location\" \n                    required={true} \n                    aria-describedby=\"my-helper-text\" \n                    name='location'\n                    type='text'\n                    onChange={changeHandler}\n                    value={formState.location}\n                    className='inputField'\n                />\n                <FormHelperText id=\"location helper\" className='helperFont'>\n                    Where would you like to find a dog?\n                </FormHelperText>\n            </div>\n            <Button \n                variant=\"contained\" \n                type=\"submit\"\n                onClick={clickHandler}\n                style={{marginTop: '5vh', width: '35%', maxWidth: '175px', alignItems: 'center',}}>\n                  Sign Up\n            </Button>\n            <p align=\"center\" className=\"labelFont\">\n                Already have an account?{\" \"}\n                <Button onClick={flipChange} className=\"labelFont\">Log In</Button>\n            </p>\n        </FormGroup>\n    </div>);\n};","import React, { useState } from \"react\";\n// imported utils files\nimport Auth from \"../utils/auth\";\n// imported page files\nimport Profile from \"./Profile.js\";\n// imported component files\nimport LoginComp from \"../components/Login/index.js\";\nimport Signup from \"../components/Signup/index\";\n// imported mui componets\nimport Button from \"@mui/material/Button\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport { Grid } from \"@mui/material\";\n// imported custom css\nimport \"./Login.css\";\n\nexport default function Login() {\n  const [flipState, setFlipState] = useState(\"content\");\n\n  const flipChange = (event) => {\n    if (flipState === \"content\") {\n      setFlipState(\"content contentTwo\");\n    } else {\n      setFlipState(\"content\");\n    }\n  };\n  console.log(Auth.isLoggedIn());\n  if (Auth.isLoggedIn()) {\n    return <Profile />;\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"grid\",\n        gridAutoColumns: \"1fr\",\n        gap: 3,\n        alignItems: \"center\",\n      }}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid container className=\"login-signupContainer\">\n          <Paper elevation={6} className=\"login-signupCard\">\n            <h2\n              align=\"center\"\n              className='titleFont'\n            >\n              Search hundreds of animal rescue organizations to find your\n              perfect rescue dog.\n            </h2>\n            <Grid item className=\"flippyCard\">\n              {/* {renderState.comp ? <LoginComp /> : <Signup />}\n              {renderState.comp ? (\n                <p align=\"center\" className='front'>\n                  Don't have an account?{\" \"}\n                  <Button onClick={handleChange}>Sign Up</Button>\n                </p>\n              ) : (\n                <p align=\"center\" className='back'>\n                  Already have an account?{\" \"}\n                  <Button onClick={handleChange}>Log In</Button>\n                </p>\n              )} */}\n              <div className={flipState}>\n                <LoginComp flipChange={flipChange}/>\n                <Signup flipChange={flipChange}/>\n              </div>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\n// imports from material\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport FormLabel from '@mui/material/FormLabel';\n// imports from utils\nimport Auth from '../utils/auth';\nimport './Settings.css'\nimport {UPDATE_SETTINGS, REMOVE_USER} from '../utils/mutations';\nimport {QUERY_SETTINGS} from '../utils/queries';\nimport {useQuery, useMutation} from '@apollo/client';\n\nexport default function Settings() {\n  const {loading, data} =\n    useQuery(QUERY_SETTINGS, {\n    variables: {userId: Auth.getProfileToken().data._id}\n  });\n  // console.log('QUERY_SETTINGS = ',data?.settings);\n  let prevAge;\n  let prevSize;\n  let prevTrained;\n  if(!loading) {\n      prevAge = data?.settings.age;\n      prevSize = data?.settings.size;\n      prevTrained = data?.settings.house_trained;\n  }\n   \n  console.log('prevAge', prevAge, 'prevSize', prevSize, 'prevTrained', prevTrained);\n\n  const [updateSettings] = useMutation(UPDATE_SETTINGS);\n  const [removeUser] = useMutation(REMOVE_USER);\n  // initializing the state lets us update it for some reason\n  const [age, setAge] = useState(null);\n  const [size, setSize] = useState(null);\n  const [trained, setTrained] = useState(null);\n  const [ageFlag, setAgeFlag] = useState(false);\n  const [sizeFlag, setSizeFlag] = useState(false);\n  const [trainedFlag, setTrainedFlag] = useState(false);\n  const isMounted = useRef(false);\n\n  // handle functions set the states, this hook will make the DB update\n  useEffect(()=> {\n    if (isMounted.current){\n    // console.log(`age = ${age} size = ${size} trained = ${trained}`);\n    handleSettingsChange();\n    } else {\n      isMounted.current = true\n    }\n  },[age,size,trained]);\n\n  const goLogin = (event) => {\n    window.location.assign(\"/\");\n  };\n  const handleAge = (event) => {\n    console.log('ageflag = ',ageFlag);\n    console.log('sizeFlag = ',sizeFlag);\n    console.log('trainedflag = ',trainedFlag);\n    setAgeFlag(true);\n    setAge(event.target.value);\n    prevAge = age;\n  };\n  const handleSize = (event) => {\n    console.log('ageflag = ',ageFlag);\n    console.log('sizeFlag = ',sizeFlag);\n    console.log('trainedflag = ',trainedFlag);\n    setSizeFlag(true);\n    setSize(event.target.value);\n    prevSize = size;\n  };\n  const handleTrained = () => {\n    console.log('ageflag = ',ageFlag);\n    console.log('sizeFlag = ',sizeFlag);\n    console.log('trainedflag = ',trainedFlag);\n    setTrainedFlag(true);\n    if(trained) {\n      setTrained(null);\n      prevTrained = trained;\n    }else {\n      setTrained(true);\n      prevTrained = trained;\n    }\n    \n  };\n  const handleLogout = () => {\n    Auth.logout();\n  };\n\n  const handleDelete = async (e) => {\n    await removeUser({\n      variables: {\n        _id: Auth.getProfileToken().data._id\n      }\n    });\n    Auth.logout();\n  }\n\n  const handleSettingsChange = async() => {\n    try{\n      switch(true) {\n        case (ageFlag && sizeFlag && trainedFlag): {\n          await updateSettings({\n            variables: {userId:Auth.getProfileToken().data._id, age, size, house_trained: trained}\n          });\n          break;\n        } \n        case (ageFlag && trainedFlag): {\n          await updateSettings({\n            variables: {userId:Auth.getProfileToken().data._id, age, size:prevSize, house_trained: trained}\n          });\n          break;\n        }\n        case (trainedFlag && sizeFlag): {\n          await updateSettings({\n            variables: {userId:Auth.getProfileToken().data._id, age:prevAge, size, house_trained: trained}\n          });\n          break;\n        }\n        case(ageFlag && sizeFlag): {\n          await updateSettings({\n            variables: {userId:Auth.getProfileToken().data._id, age, size, house_trained: prevTrained}\n          });\n          break;\n        }\n        case(ageFlag): {\n          await updateSettings({\n            variables: {userId:Auth.getProfileToken().data._id, age, size:prevSize, house_trained: prevTrained}\n          });\n          break;\n        }\n        case(sizeFlag): {\n          await updateSettings({\n            variables: {userId:Auth.getProfileToken().data._id, age:prevAge, size, house_trained: prevTrained}\n          });\n          break;\n        }\n        case(trainedFlag): {\n          await updateSettings({\n            variables: {userId:Auth.getProfileToken().data._id, age:prevAge, size: prevSize, house_trained: trained}\n          });\n          break;\n        }\n        default: {\n          console.error(\"default case firing\");\n          break;\n        }\n      }\n    }catch(err) {\n      console.log(err);\n    }\n  };\n\n  if (Auth.isLoggedIn()) {\n    return (\n\n      <Box sx={{\n        display: 'grid',\n        gridAutoColumns: '1fr',\n        gap: 3,\n        alignItems: 'center',\n        paddingBottom: 7,\n      }}\n    > {loading ? <div>Loading settings...</div> :\n      <React.Fragment>\n      <Paper className='settingsContainer' elevation = {6} >\n          <h2 align=\"center\">User Settings</h2>\n  \n        <FormControl fullWidth style={{marginBottom: '20px'}} className='settingsForm'>\n          <InputLabel id=\"demo-simple-select-label\">Age</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select-label\"\n            value={prevAge}\n            label=\"Age\"\n            type=\"age\"\n            className='settingsInput'\n            onChange={handleAge}\n          >\n            <MenuItem value={null}>No Preference</MenuItem>\n            <MenuItem value={'Baby'}>Baby</MenuItem>\n            <MenuItem value={'Young'}>Young</MenuItem>\n            <MenuItem value={'Adult'}>Adult</MenuItem>\n            <MenuItem value={'Senior'}>Senior</MenuItem>\n          </Select>\n        </FormControl>\n    \n        <FormControl fullWidth style={{marginTop: '20px', marginBottom:'10px'}} className='settingsForm'>\n          <InputLabel id=\"size-select\">Size</InputLabel>\n          <Select\n            labelId=\"size-select\"\n            id=\"demo-simple-select\"\n            value={prevSize}\n            label=\"Size\"\n            className='settingsInput'\n            onChange={handleSize}\n          >\n            <MenuItem value={null}>No Preference</MenuItem>\n            <MenuItem value={'Small'}>Small</MenuItem>\n            <MenuItem value={'Medium'}>Medium</MenuItem>\n            <MenuItem value={'Large'}>Large</MenuItem>\n            <MenuItem value={'Extra Large'}>Extra Large</MenuItem>\n          </Select>\n        </FormControl>\n        <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\"></FormLabel>\n      <FormGroup aria-label=\"position\" row>\n        <FormControlLabel\n          value={prevTrained}\n          control={<Switch color=\"primary\" checked={prevTrained}/>}\n          label=\"House-trained\"\n          labelPlacement=\"start\"\n          className='settingsInput'\n          onChange={handleTrained}\n        />\n        </FormGroup>\n      </FormControl>\n        </Paper>\n        \n        <Button variant ='outlined' color='error'onClick={handleLogout} className='settingsLogout'>Logout</Button>\n        <Button variant ='outlined' color='error'onClick={handleDelete} className='settingsLogout'>Delete Account</Button>\n        </React.Fragment> \n      }\n      </Box>\n    );\n  } else {\n    const style = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n    };\n\n    return (\n      <div style={style}>\n        <h1>You are not logged in!!</h1>\n        <Button onClick={goLogin}>Login</Button>\n      </div>\n    );\n  }\n}\n","// Detailed view of each dog that the user has liked/swiped right on\nimport React from \"react\";\n// imports from material\nimport {Grid}  from '@mui/material';\nimport Paper from '@mui/material/Paper';\nimport Auth from \"../../utils/auth\";\n\nexport default function LikedCards(props) {\n\n    function yesNo (e) {\n        if (e === true) {\n            return 'Yes'\n        }else{\n            return 'No'\n        }\n    }\n    const removePet = async (dogId) => {\n        const {data} = await props.removeUserPets({\n            variables: {\n                userId: Auth.getProfileToken().data._id,\n                dog: dogId\n            }\n        });\n        window.location.reload();\n    }\n\n    return(<div>\n            <Paper elevation = {6} style={{borderRadius: 15}} >\n                <Grid item xs={4} key={props.dog._id} container ={true} className='likedDogsContainer' style={{ marginBottom:15, maxWidth:\"90vw\", alignItems:\"center\", justifyContent:\"center\", fontFamily:\"Oxygen\"}}>\n                <button className='likesXBtn' onClick={() => removePet(props.dog._id)}><img src='./images/x.png' className='likesXImg'></img></button>\n                        <img src={props.dog.photo[0].medium} alt='dog' />\n                        <div className='likedDogsEx'>\n                            <h2>{props.dog.name}</h2>\n                            <p>{props.dog.breed.primary}</p>\n                            <p>{props.dog.size} | {props.dog.gender} | {props.dog.age}</p>\n                        </div>\n                        <div>\n                            <ul>\n                                <li>Shelter/Organization: {props.dog.organization}</li>\n                                <li>Location: {props.dog.location}</li>\n                                <li>Spayed: {yesNo(props.dog.spayed)}</li>\n                                <li>House Trained: {yesNo(props.dog.house_trained)}</li>\n                                <li>Shots: {yesNo(props.dog.shots)}</li>\n                            </ul>\n                        </div>\n                        <div className='likedDogsMeet'>\n                            <h3>Meet {props.dog.name}!</h3>\n                        </div>\n                        <p>{props.dog.description}</p>\n                        <a href={props.dog.url} target='_blank' rel=\"noreferrer noopener\">Learn more...</a>\n                    </Grid>\n                </Paper>\n    </div>);\n}","import React from \"react\";\nimport { useQuery, useMutation } from \"@apollo/client\";\n// import from components\nimport LikedCards from \"../components/LikedCards/index\";\n// import from material\nimport { Grid } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\n// import from utils\nimport { QUERY_ME } from \"../utils/queries\";\nimport { REMOVE_USER_PETS } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport './Likes.css'\n\nexport default function Likes() {\n  const me = useQuery(QUERY_ME);\n  const [removeUserPets] = useMutation(REMOVE_USER_PETS);\n  const likedDogs = me.data?.me.pets || [];\n\n  const goLogin = (event) => {\n    window.location.assign(\"/\");\n  };\n  \n  if (Auth.isLoggedIn()) {\n    \n    if (me.loading) {\n      return <div>...loading</div>;\n    }\n\n    if (!likedDogs.length) {\n      return <h3>No liked dogs yet!</h3>;\n    }\n\n    return (\n      <Box>\n        <h2 className='likesHeader'>Your Liked Dogs</h2>\n        \n        <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n          <Grid item>\n            {likedDogs.map((dog) => <LikedCards dog={dog} removeUserPets={removeUserPets}/>)}\n          </Grid>\n        </Grid>\n        \n      </Box>\n    );\n  } else {\n    const style = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      textAlign: \"center\",\n    };\n\n    return (\n      <div style={style}>\n        <h1>You are not logged in!!</h1>\n        <Button onClick={goLogin}>Login</Button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { \n  ApolloClient, \n  InMemoryCache, \n  ApolloProvider,\n  createHttpLink, \n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n// import from components\nimport Header from './components/Header';\nimport Navbar from './components/Navbar';\n// import from pages\nimport Cards  from './pages/Cards';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\nimport Settings from './pages/Settings';\nimport Likes from './pages/Likes';\n// import from utils\nimport Auth from \"./utils/auth\";\n// import from material\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\n\nconst theme = createTheme (theme => ({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#fafafa',\n    },\n  },\n  typography: {\n    h1: {\n      fontFamily: 'Pacifico',\n    },\n    fontFamily: 'Oxygen',\n    h2: {\n      fontFamily: 'Source Sans Pro',\n    },\n  },\n}));\n\nfunction App() {\n\n  return (\n\n<ThemeProvider theme = {theme}>\n\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Header />\n          <div>\n            <Route exact path=\"/\">\n              <Login/>\n            </Route>\n            <Route exact path=\"/sheltr\">\n              <Cards />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/likes\">\n              <Likes />\n            </Route>\n            <Route exact path=\"/settings\">\n              <Settings />\n            </Route>\n          </div>\n          {Auth.isLoggedIn() && <Navbar />}\n        </div>\n      </Router>\n    </ApolloProvider>\n\n </ThemeProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}